
services:
  postgres:
    image: postgres:13-alpine
    container_name: sgp-postgres
    environment:
      POSTGRES_DB: sgppostgres
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck: # Healthcheck para garantir que o banco de dados está pronto
      test: ["CMD-SHELL", "pg_isready -U user -d sgppostgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Serviço Spring Boot
  app:
    #build: src/main/java/com/b2b/ordermanagement
    build: .
    container_name: sgp-app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy # Garante que o PostgreSQL esteja saudável antes de iniciar a aplicação
    environment:
      # variáveis de ambiente
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/sgppostgres
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      NOTIFICATION_SERVICE_MOCK_ENABLED: "true" # Habilita o mock de notificação
    # Opcional: para ver logs mais detalhados do Spring Boot
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "5"

volumes:
  postgres_data:
